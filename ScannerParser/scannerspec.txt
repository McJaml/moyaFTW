COMPILER moyaFTW

CHARACTERS
letter = 'A'..'Z' + 'a'..'z'.
digit = '0'..'9'.
anyButQuote = ANY - '\"'.

TOKENS
id = letter{letter|digit|'_'}.
cte_i = digit{digit}.
cte_char = '\'' anyButQuote'\''.
cte_string = '"'{anyButQuote}'"'.
cte_d = {digit}'.'digit{digit}.
int = "int".
char = "char".
string = "string".
if = "if".
while = "while".
bool = "bool".
double = "double".
extends = "extends".
this = "this".
else = "else".
false = "false".
true = "true".
class = "class".
for = "for".
do = "do".
void = "void".
return = "return".
new = "new".
null = "null".
super = "super".
write = "write".
and = "&&".
or = "||".
lt = "<".
gt = ">".
lte = "<=".
gte = ">=".
ne = "!=".
eq = "=".
ee = "==".
plus = "+".
minus = "-".
times = "*".
divide = "/".
not = "!".
scolon = ";".
comma = ",".
dot = ".".
lbrace = "{".
rbrace = "}".
lparent = "(".
rparent = ")".

COMMENTS FROM "/*" TO "*/" NESTED
COMMENTS FROM "//" TO '\n'

IGNORE '\r' + '\n' + '\t'

PRODUCTIONS
moyaFTW = class id [extends id] ClassBody.
ClassBody = lbrace [Vars] {Metodo} [Main] rbrace.

Vars = {A}.
A = Tipo B {comma B} scolon.
A = DeclararObj.
B = id [eq Expresion].

Expresion = Expresion_Otr [(and | or) Expresion].

Expresion_Otr = Exp [C].
C = Comparador Exp.
Comparador = lt | gt | lte | gte | ne | eq.

Exp = Termino [(plus | minus) Exp].
Termino = Factor [ (times | divide) Termino].

Var_cte = id | cte_i | cte_d | false | true | cte_char | cte_string | LlamarMetodo.

Tipo = int | double | char | bool | string.

Factor = D.
D = lparent Expresion rparent.
D = [plus | minus | not] Var_cte.

If = if lparent Expresion rparent lbrace {Estatuto} rbrace [else lbrace {Estatuto} rbrace].

While = while lparent Expresion rparent lbrace {Estatuto} rbrace.

For = for lparent [For1] scolon Expresion scolon [For1] rparent lbrace {Estatuto} rbrace.  
For1 = AsignarFor [comma For1].

Asignar = id eq (Expresion | LlamarMetodo | Instanciar | Read) scolon.
AsignarFor = id eq Expresion.

LlamarMetodo = [id dot] id lparent Parametros rparent.

Estatuto = If | For | While | Asignar | LlamarMetodo | Print | DeclararObj.

DeclararObj = id id [instanciar] scolon.

Metodo = (void | Tipo) id lparent TipoParametros rparent lbrace [Vars] {Estatuto} return [Expresion] rbrace.
TipoParametros = Tipo id [comma TipoParametros].

Instanciar = eq new id lparent [Parametros] rparent.
Parametros = Var_cte [comma Parametros].

Print = write lparent Var_cte rparent scolon.
Read = read lparent rparent.

END moyaFTW.