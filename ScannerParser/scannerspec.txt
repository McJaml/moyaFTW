COMPILER moyaFTW

CHARACTERS
letter = 'A'..'Z' + 'a'..'z'.
digit = '0'..'9'.
anyButQuote = ANY - '\"'.

TOKENS
id = letter{letter|digit|'_'}.
cte_i = digit{digit}.
cte_char = '\'' anyButQuote'\''.
cte_string = '"'{anyButQuote}'"'.
cte_d = {digit}'.'digit{digit}.
int = "int".
char = "char".
string = "string".
if = "if".
while = "while".
bool = "bool".
double = "double".
extends = "extends".
this = "this".
else = "else".
false = "false".
true = "true".
class = "class".
for = "for".
do = "do".
void = "void".
return = "return".
new = "new".
null = "null".
super = "super".
write = "write".
and = "&&".
or = "||".
lt = "<".
gt = ">".
lte = "<=".
gte = ">=".
ne = "!=".
eq = "==".
plus = "+".
minus = "-".
times = "*".
divide = "/".
not = "!".

COMMENTS FROM "/*" TO "*/" NESTED
COMMENTS FROM "//" TO '\n'

IGNORE '\r' + '\n' + '\t'

PRODUCTIONS
moyaFTW = class id [extends id] BodyClass.
BodyClass = '{' [Vars] {Metodo} [Main] '}'.

Vars = {A}.
A = Tipo B {',' B} ';'.
A = DeclararObj.
B = id ['=' Expresion].

Expresion = Expresion_Otr [(and | or) Expresion].

Expresion_Otr = Exp [C].
C = Comparador Exp.
Comparador = lt | gt | lte | gte | ne | eq.

Exp = Termino [(plus | minus) Exp].
Termino = Factor [ (times | divide) Termino].

Var_cte = id | cte_i | cte_d | false | true | cte_char | cte_string | LlamarMetodo.

Tipo = int | double | char | bool | string.

Factor = D.
D = '(' Expresion ')'.
D = [plus | minus | not] Var_cte.

Ifs = if '(' Expresion ')' '{'{Estatuto}'}'

Parvada = '['{Estatuto}']'.
Estatuto = Copiar|Preguntar|Graznido|Juntar.
Copiar = id'='Expresion';'.
Graznido = quack'('(Expresion|cte_string){','(Expresion|cte_string)}')'';'.
Expresion = Exp[('>'|'<'|"<>")Exp].
Preguntar = si'('Expresion')'Parvada[sino Parvada]';'.

Var_cte = id|cte_i|cte_f.

Exp = Termino[('+'|'-')Exp].
Termino = Factor[('*'|'/')Termino].

Factor = ('('Expresion')')|(['+'|'-']Var_cte).

Juntar = junta'('D','D';'.
D = Var_cte|cte_string.
END Patito2011.