COMPILER moyaFTW

CHARACTERS
letter = 'A'..'Z' + 'a'..'z'.
digit = '0'..'9'.
anyButQuote = ANY - '\"'.

TOKENS
id = letter{letter|digit|'_'}.
cte_i = digit{digit}.
cte_char = '\'' anyButQuote'\''.
cte_string = '"'{anyButQuote}'"'.
cte_d = {digit}'.'digit{digit}.
int = "int".
char = "char".
string = "string".
if = "if".
while = "while".
bool = "bool".
double = "double".
extends = "extends".
this = "this".
else = "else".
false = "false".
true = "true".
class = "class".
for = "for".
do = "do".
void = "void".
return = "return".
new = "new".
null = "null".
super = "super".
write = "write".
main = "main".
ftw = "ftw".
read = "read".
and = "&&".
or = "||".
lt = "<".
gt = ">".
lte = "<=".
gte = ">=".
ne = "!=".
eq = "=".
ee = "==".
plus = "+".
minus = "-".
times = "*".
divide = "/".
not = "!".
scolon = ";".
comma = ",".
dot = ".".
lbrace = "{".
rbrace = "}".
lparent = "(".
rparent = ")".
lcorch = "[".
rcorch = "]".

COMMENTS FROM "/*" TO "*/" NESTED
COMMENTS FROM "//" TO '\n'

IGNORE '\r' + '\n' + '\t'

PRODUCTIONS
moyaFTW = ftw lbrace {Class} Main rbrace.
Class = class id [extends id] ClassBody.
ClassBody = lbrace {Vars} {Metodo} rbrace.

Main = main lbrace {Vars} {Estatuto} rbrace.

Vars = A.
A = (Tipo B scolon) | DeclararObj.
B = id [E].
E = (eq Var_cte [comma B]) | (lcorch rcorch [InstanciarList]).

Expresion = Expresion_Otr [(and | or) Expresion].

Expresion_Otr = Exp [C].
C = Comparador Exp.
Comparador = lt | gt | lte | gte | ne | eq.

Exp = Termino [(plus | minus) Exp].
Termino = Factor [ (times | divide) Termino].

Var_cte = (id {dot id} [F]) | cte_i | cte_d | false | true | cte_char | cte_string.

F = Parametros | (lcorch Var_cte rcorch).

Tipo = int | double | char | bool | string.

Factor = D.
D = (lparent Expresion rparent) | ([plus | minus | not] Var_cte).

If = if lparent Expresion rparent lbrace {Estatuto} rbrace [else lbrace {Estatuto} rbrace].

While = while lparent Expresion rparent lbrace {Estatuto} rbrace.

For = for lparent [For1] scolon Expresion scolon [For1] rparent lbrace {Estatuto} rbrace.  
For1 = id {dot id} [F] Asignar.

AsignarLlamar = id {dot id} [F] [Asignar] scolon.
Asignar = eq (Expresion | Instanciar | Read).

Estatuto = If | For | While | AsignarLlamar | Print.
DeclararObj = id [Instanciar] scolon.

Metodo = (void | Tipo) id lparent TipoParametros rparent lbrace Vars {Estatuto} return [Expresion] rbrace.
TipoParametros = Tipo id [comma TipoParametros].

Instanciar = eq new (InstanciarObj | InstanciarList).
InstanciarObj = id lparent [Parametros] rparent.
InstanciarList = Tipo lcorch Var_cte rcorch.
Parametros = Exp [comma Parametros].

Print = write lparent Exp rparent scolon.
Read = read lparent rparent.

END moyaFTW.